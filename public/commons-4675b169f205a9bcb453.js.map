{"version":3,"file":"commons-4675b169f205a9bcb453.js","mappings":"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","sources":["webpack://stories-blog/./node_modules/zustand/esm/vanilla.mjs","webpack://stories-blog/./node_modules/zustand/esm/index.mjs","webpack://stories-blog/./node_modules/zustand/esm/middleware.mjs","webpack://stories-blog/./src/stores/common-store.ts","webpack://stories-blog/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","webpack://stories-blog/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js","webpack://stories-blog/./node_modules/use-sync-external-store/shim/index.js","webpack://stories-blog/./node_modules/use-sync-external-store/shim/with-selector.js"],"sourcesContent":["const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n","import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api)\n    return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording)\n      return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools)\n              return;\n            if (typeof api.dispatch !== \"function\")\n              return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState)\n              return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0)\n    f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import { create } from 'zustand'\nimport { createJSONStorage, persist } from 'zustand/middleware'\n\ntype SidebarState = {\n  open: boolean\n  setOpen: (opn?: boolean) => void\n}\n\nexport const useSidebarStore = create<SidebarState>()(set => ({\n  open: false,\n  setOpen: opn => set(state => ({ open: opn })),\n}))\n\n/**\n * 테마 설정 (light, dark)\n * persist : persist로 감싸면 브라우저 스토리지에 저장을 하기 때문에 리프레쉬를 해도 값이 유지됨\n */\ntype ThemeModeState = {\n  themeMode: string\n  setThemeMode: (themeMode?: string) => void\n}\n\nexport const useThemeModeStore = create<ThemeModeState>()(\n  persist(\n    (set, get) => ({\n      themeMode: 'light',\n      // setThemeMode: (mode) => set({ themeMode: get().themeMode === 'light' ? 'dark' : 'light' }),\n      setThemeMode: mode => set(state => ({ themeMode: mode })),\n    }),\n    {\n      name: 'theme-mode', // name of the item in the storage (must be unique)\n      // storage: createJSONStorage(() => sessionStorage), // (optional)이기 때문에 해당 줄을 적지 않으면 'localStorage'가 기본 저장소로 사용된다.\n    },\n  ),\n)\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var h=require(\"react\"),n=require(\"use-sync-external-store/shim\");function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q=\"function\"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;\nexports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);\nu(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n"],"names":["createStoreImpl","createState","state","listeners","Set","setState","partial","replace","nextState","Object","is","previousState","assign","forEach","listener","getState","api","getInitialState","initialState","subscribe","add","delete","destroy","console","warn","clear","createStore","useDebugValue","useSyncExternalStoreWithSelector","didWarnAboutEqualityFn","identity","arg","createImpl","useBoundStore","selector","equalityFn","slice","getServerState","useStore","create","createJSONStorage","getStorage","options","storage","e","getItem","name","_a","parse","str2","JSON","reviver","str","Promise","then","setItem","newValue","stringify","replacer","removeItem","toThenable","fn","input","result","onFulfilled","_onRejected","this","_onFulfilled","onRejected","persist","config","baseOptions","set","get","localStorage","serialize","deserialize","partialize","version","merge","persistedState","currentState","hasHydrated","hydrationListeners","finishHydrationListeners","args","thenableSerialize","errorInSync","thenable","serializedValue","catch","savedSetState","configResult","stateFromStorage","hydrate","cb","postRehydrationCallback","onRehydrateStorage","call","bind","storageValue","deserializedStorageValue","migrate","error","migratedState","_a2","setOptions","newOptions","clearStorage","getOptions","rehydrate","onHydrate","onFinishHydration","oldImpl","_b","skipHydration","newImpl","useSidebarStore","open","setOpen","opn","useThemeModeStore","themeMode","setThemeMode","mode","k","a","b","l","useState","m","useEffect","n","useLayoutEffect","p","r","getSnapshot","value","d","f","u","window","document","createElement","inst","c","g","exports","useSyncExternalStore","h","q","t","useRef","v","useMemo","w","current","hasValue","module"],"sourceRoot":""}