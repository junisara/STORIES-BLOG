{"version":3,"file":"component---src-pages-index-tsx-a8b426e8d8f6d3615c88.js","mappings":"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","sources":["webpack://stories-blog/./src/components/ui/card.tsx","webpack://stories-blog/./src/components/List/post-list.tsx","webpack://stories-blog/./src/hooks/use-post-list.ts","webpack://stories-blog/./src/containers/Home/home-post-list.tsx","webpack://stories-blog/./src/pages/index.tsx"],"sourcesContent":["import React from 'react'\n\nimport { cn } from '@/lib/utils'\n\nconst Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('rounded-lg bg-card text-card-foreground ', className)} {...props} />\n))\nCard.displayName = 'Card'\n\nconst CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('flex flex-col space-y-1.5 p-6', className)} {...props} />\n))\nCardHeader.displayName = 'CardHeader'\n\nconst CardTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(({ className, ...props }, ref) => (\n  <h3 ref={ref} className={cn('text-2xl font-semibold leading-tight tracking-tight', className)} {...props} />\n))\nCardTitle.displayName = 'CardTitle'\n\nconst CardDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(({ className, ...props }, ref) => (\n  <p ref={ref} className={cn('text-sm text-muted-foreground', className)} {...props} />\n))\nCardDescription.displayName = 'CardDescription'\n\nconst CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n))\nCardContent.displayName = 'CardContent'\n\nconst CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('flex items-center p-6 pt-0', className)} {...props} />\n))\nCardFooter.displayName = 'CardFooter'\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import React from 'react'\nimport { GatsbyImage, StaticImage, getImage } from 'gatsby-plugin-image'\nimport { Link, PageProps, navigate } from 'gatsby'\nimport { Post } from '@/config/types'\nimport kebabCase from 'lodash.kebabcase'\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card'\nimport { timeFormat } from '@/lib/utils'\n\ntype DataProps = {\n  // site: {\n  //   siteMetadata: any\n  // }\n  // allMdx: any\n  posts: [Post]\n  currentCategory?: string\n  currentTag?: string\n}\nconst PostList: React.FC<DataProps> = ({ posts, currentCategory, currentTag }) => {\n  return (\n    <section className=\"\">\n      {posts.map((post: Post) => {\n        const title = post.frontmatter.title || post.frontmatter.postId\n        let tags =\n          post.frontmatter.taxonomy?.tag &&\n          post.frontmatter.taxonomy?.tag.map(\n            (tag: string, index: number) =>\n              tag &&\n              !tag.includes('[@') && (\n                <button\n                  key={index}\n                  onClick={() => navigate(`/tags/${kebabCase(tag)}/`)}\n                  itemProp=\"url\"\n                  className=\"ml-2 text-colorText2 text-sm hover:text-primary\"\n                >\n                  {' '}\n                  #{tag}{' '}\n                </button>\n              ),\n          )\n        tags && tags.join('')\n        // const thumbnail = post.frontmatter.thumbnail && post.frontmatter.thumbnail.ext === '.gif' ? post.frontmatter.thumbnail.publicURL : getImage(post.frontmatter.thumbnail)\n        // const firstImageUrl = post.fields.firstImageUrl && post.fields.firstImageUrl.ext === '.gif' ? post.fields.firstImageUrl.publicURL : getImage(post.fields.firstImageUrl)\n        const thumbnail = getImage(post.frontmatter.thumbnail)\n        const firstImageUrl = getImage(post.fields.firstImageUrl)\n        const frontImage = thumbnail || firstImageUrl\n\n        return (\n          <Card key={post.id} className=\"mb-3\">\n            <Link to={'/' + post.frontmatter.postId} itemProp=\"url\">\n              <CardHeader className=\"pb-4\">\n                <CardDescription>\n                  <small>{timeFormat(post.frontmatter.datePublished)}</small>\n                </CardDescription>\n                <CardTitle>{title}</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {frontImage && <GatsbyImage image={frontImage} alt=\"썸네일\" className=\"float-left mr-5\" />}\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: post.frontmatter.desc || post.excerpt,\n                  }}\n                  itemProp=\"description\"\n                  className=\"w-fit-content\"\n                />\n              </CardContent>\n              <CardFooter className=\"block\">{tags}</CardFooter>\n            </Link>\n          </Card>\n        )\n      })}\n    </section>\n  )\n}\n\nexport default PostList\n","import { useStaticQuery, graphql } from 'gatsby'\n\nconst usePostList = () => {\n  const data = useStaticQuery(graphql`\n    query PostList {\n      site {\n        siteMetadata {\n          title\n          siteUrl\n          description\n        }\n      }\n      allMdx(sort: { frontmatter: { datePublished: DESC } }, filter: { frontmatter: { publish: { eq: \"published\" } } }) {\n        nodes {\n          fields {\n            currentCategory\n            firstImageUrl {\n              childImageSharp {\n                gatsbyImageData(layout: CONSTRAINED, height: 120, width: 160, quality: 85)\n              }\n            }\n          }\n          frontmatter {\n            datePublished\n            title\n            postId\n            taxonomy {\n              tag\n            }\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(layout: CONSTRAINED, height: 120, width: 160, quality: 85)\n              }\n            }\n          }\n          id\n          excerpt\n          parent {\n            ... on File {\n              modifiedTime\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return { site: data.site, posts: data.allMdx.nodes }\n}\n\nexport default usePostList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport type { HeadFC, PageProps } from 'gatsby'\nimport { BLOG_DESC, BLOG_NAME } from '@/config/constants'\nimport usePostList from '@/hooks/use-post-list'\nimport PostList from '@/components/List/post-list'\nimport Layout from '@/layouts/layout'\nimport Seo from '@/components/Common/seo'\nimport Sidebar from '@/layouts/sidebar'\nimport { useSidebarStore } from '@/stores/common-store'\nimport { Drawer, DrawerClose, DrawerContent, DrawerDescription, DrawerFooter, DrawerHeader, DrawerTitle, DrawerTrigger } from '@/components/ui/drawer'\n\nconst HomePage = () => {\n  const { open, setOpen } = useSidebarStore()\n  const { site, posts } = usePostList()\n  const siteTitle: string = site.siteMetadata?.title || BLOG_NAME\n  const currentCategory = '/'\n\n  if (posts.length === 0) {\n    return (\n      <Layout title={siteTitle}>\n        <p>\n          No blog posts found. Add markdown posts to \"_POSTS\" (or the directory you specified for the \"gatsby-source-filesystem\" plugin in gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout title={siteTitle}>\n      <section className=\"sidebar block lg:hidden\">\n        <Drawer direction=\"left\" open={open} onOpenChange={setOpen}>\n          <DrawerContent className=\"fixed top-0 left-0 mt-0 w-3/4 rounded-none\">\n            <Sidebar currentCategory={currentCategory} viewItems={['category', 'tags']} />\n          </DrawerContent>\n        </Drawer>\n      </section>\n      <section className=\"sidebar hidden lg:block\">\n        <Sidebar currentCategory={currentCategory} viewItems={['category', 'tags']} />\n      </section>\n      <section className=\"w-full lg:min-w-[600px]\">\n        {/* <Bio /> */}\n        <PostList posts={posts} />\n      </section>\n    </Layout>\n  )\n}\n\nexport default HomePage\n","import React from 'react'\nimport HomePostListPage from '@/containers/Home/home-post-list'\nimport Seo from '@/components/Common/seo'\nimport { BLOG_DESC, BLOG_NAME } from '@/config/constants'\nimport { useThemeModeStore } from '@/stores/common-store'\n\nexport default HomePostListPage\n\nexport function Head() {\n  const { themeMode } = useThemeModeStore()\n  return (\n    <>\n      <html lang=\"ko\" />\n      <body className={themeMode} />\n      <Seo title={BLOG_NAME || 'Home Page'} description={BLOG_DESC} />\n    </>\n  )\n}\n"],"names":["Card","React","_ref","ref","className","props","Object","assign","cn","displayName","CardHeader","_ref2","CardTitle","_ref3","CardDescription","_ref4","CardContent","_ref5","CardFooter","_ref6","posts","currentCategory","currentTag","map","post","_post$frontmatter$tax","_post$frontmatter$tax2","title","frontmatter","postId","tags","taxonomy","tag","index","includes","key","onClick","navigate","kebabCase","itemProp","join","thumbnail","getImage","firstImageUrl","fields","frontImage","id","Link","to","timeFormat","datePublished","GatsbyImage","image","alt","dangerouslySetInnerHTML","__html","desc","excerpt","usePostList","data","useStaticQuery","site","allMdx","nodes","HomePage","_site$siteMetadata","open","setOpen","useSidebarStore","siteTitle","siteMetadata","BLOG_NAME","length","Layout","Drawer","direction","onOpenChange","DrawerContent","Sidebar","viewItems","PostList","Head","themeMode","useThemeModeStore","lang","Seo","description","BLOG_DESC"],"sourceRoot":""}